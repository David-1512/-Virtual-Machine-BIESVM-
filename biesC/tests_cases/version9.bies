let sumList = (a, from, to, s) => if (from == to) then s else sumList(a, from + 1, to, a[from] + s)
let sumListShort = (a, n) => sumList(a, 0, n, 0)
let {const a = [1, 2, 3, 4, 5]
	 const from = 0
	 const to = 3 
	} in {
	print("*** Testing sumList("+ a + " ," + from + ", " + to + ") ***")
	print(sumList(a, from, to, 0) )
	print(sumListShort(a, to))
}


/*
$FUN $1 args:1 parent:4 
BLD 0 1
BLD 0 2
EQ
BF 3
BLD 0 3
BR 13
BLD 0 0
BLD 0 1
LDV 1
ADD
BLD 0 2
BLD 0 0
BLD 0 1
LTK
BLD 0 3
ADD
BLD 0 0
APP 4
RET
$END $1

$FUN $2 args:2 parent:2
BLD 0 0
LDV 0
BLD 0 1
LDV 0
BLD 0 0
APP 4
RET
$END $2

$FUN $3 args:3 parent:0
LDV []
LDV 5
LIN
LDV 4
LIN
LDV 3
LIN
LDV 2
LIN
LDV 1
LIN
BST 0 0
LDV 0
BST 0 1
LDV 3
BST 0 2
LDV "*** Testing sumList("
BLD 0 0
ADD
LDV " ,"
ADD
BLD 0 1
ADD
LDV ", "
ADD
BLD 0 2
ADD
LDV ") ***"
ADD
PRN
BLD 0 0
BLD 0 1
BLD 0 2
LDV 0
BLD 0 0
APP 4
PRN
BLD 0 0
BLD 0 2
BLD 0 1
APP 2
PRN
RET
$END $3

$FUN $0 args:0 parent:$0
LDF $1
BST 0 0
LDF $2
BST 0 1
LDF $3
APP 0
HLT
$END $0
INI $0

*/