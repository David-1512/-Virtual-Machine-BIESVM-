let max = (x, y) => if (x > y) then x else y
let {
	const x = 10
	const y = 20
} in {
	print("*** Testing max("+ x + " ," + y + ") ***")
	print(max(x, y))
}



/*
$Fun $1 args:2 parent:$0 
BLD 0 0
BLD 0 1
GT
BF 2
BLD 0 0
BR 1
BLD 0 1
RET
$END $1

$Fun $2 args:0 parent:$0
LDV 10
BST 0 0
LDV 20
BST 0 1
LDV "*** Testing max("
BLD 0 0
ADD
LDV " ,"
ADD
BLD 0 1
ADD
LDV ") ***"
ADD
PRN
BLD 0 0
BLD 0 1
APP NaN
PRN
RET
$END $2

$Fun $0 args:0 parent:$0
LDF $1
BST 0 0
LDF $2
APP 0
HLT
$END $0
INI $0

PS D:\Users\david\Desktop\biesvm\biesvm\biesC> node index.js basm/version6.bies
4
$Fun $1 args:2 parent:$0 
BLD 0 0
BLD 0 1
GT
BF 2
BLD 0 0
BR 1
BLD 0 1
RET
$END $1

$Fun $2 args:0 parent:$0
LDV 10
BST 0 0
LDV 20
BST 0 1
LDV "*** Testing max("
BLD 0 0
ADD
LDV " ,"
ADD
BLD 0 1
ADD
LDV ") ***"
ADD
PRN
BLD 0 0
BLD 0 1
APP 2
PRN
RET
$END $2

$Fun $0 args:0 parent:$0
LDF $1
BST 0 0
LDF $2
APP 0
HLT
$END $0
INI $0

PS D:\Users\david\Desktop\biesvm\biesvm\biesC> node index.js basm/version3.bies
4
3
$Fun $1 args:1 parent:$0
BLD 0 0
PRN
RET
$END $1

$Fun $2 args:0 parent:$0
LDV "Hello World!"
RET
$END $2

$Fun $0 args:0 parent:$0
LDF $1
BST 0 0
LDF $2
BST 0 1
LDV 4
LDV 1
ADD
LDV 2
SUB
LDV "Testing helloworld Version "
BLD 0 2
ADD
LDV " ***"
ADD
BLD 0 0
APP 1
BLD 0 1
APP 0
PRN
HLT
$END $0
INI $0

PS D:\Users\david\Desktop\biesvm\biesvm\biesC> node index.js basm/version6.bies
4
$Fun $1 args:2 parent:$0 
BLD 0 0
BLD 0 1
GT
BF 2
BLD 0 0
BR 1
BLD 0 1
RET
$END $1

$Fun $2 args:0 parent:$0
LDV 10
BST 0 0
LDV 20
BST 0 1
LDV "*** Testing max("
BLD 0 0
ADD
LDV " ,"
ADD
BLD 0 1
ADD
LDV ") ***"
ADD
PRN
BLD 0 0
BLD 0 1
BLD 1 0
APP 2
PRN
RET
$END $2

$Fun $0 args:0 parent:$0
LDF $1
BST 0 0
LDF $2
APP 0
HLT
$END $0
INI $0
*/