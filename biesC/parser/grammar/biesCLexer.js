// Generated from ./grammar/biesC.g4 by ANTLR 4.13.2
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,50,332,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,
2,49,7,49,1,0,1,0,1,1,1,1,1,1,1,2,1,2,1,2,1,3,1,3,1,3,1,4,1,4,1,4,1,5,1,
5,1,6,1,6,1,6,1,7,1,7,1,8,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,
1,13,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,
19,1,20,1,20,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,
1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,27,1,27,1,27,1,
28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,
1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,
33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,36,1,36,
1,36,1,36,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,
39,1,39,1,40,1,40,1,40,1,41,1,41,1,41,3,41,243,8,41,1,42,4,42,246,8,42,11,
42,12,42,247,1,43,4,43,251,8,43,11,43,12,43,252,1,43,1,43,4,43,257,8,43,
11,43,12,43,258,1,44,4,44,262,8,44,11,44,12,44,263,1,44,1,44,4,44,268,8,
44,11,44,12,44,269,3,44,272,8,44,1,44,1,44,3,44,276,8,44,1,44,4,44,279,8,
44,11,44,12,44,280,1,45,1,45,1,45,1,45,5,45,287,8,45,10,45,12,45,290,9,45,
1,45,1,45,1,46,1,46,5,46,296,8,46,10,46,12,46,299,9,46,1,47,1,47,1,47,1,
47,5,47,305,8,47,10,47,12,47,308,9,47,1,47,1,47,1,48,1,48,1,48,1,48,5,48,
316,8,48,10,48,12,48,319,9,48,1,48,1,48,1,48,1,48,1,48,1,49,4,49,327,8,49,
11,49,12,49,328,1,49,1,49,1,317,0,50,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,
17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,
21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,
33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,
45,91,46,93,47,95,48,97,49,99,50,1,0,8,1,0,48,57,2,0,69,69,101,101,2,0,43,
43,45,45,2,0,34,34,92,92,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,
122,2,0,10,10,13,13,3,0,9,10,13,13,32,32,347,0,1,1,0,0,0,0,3,1,0,0,0,0,5,
1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,
17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,
0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,
1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,
0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,
0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,
73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,
0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,
1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,1,101,1,0,0,0,3,103,1,0,0,0,5,106,1,0,
0,0,7,109,1,0,0,0,9,112,1,0,0,0,11,115,1,0,0,0,13,117,1,0,0,0,15,120,1,0,
0,0,17,122,1,0,0,0,19,125,1,0,0,0,21,127,1,0,0,0,23,129,1,0,0,0,25,131,1,
0,0,0,27,133,1,0,0,0,29,136,1,0,0,0,31,138,1,0,0,0,33,140,1,0,0,0,35,142,
1,0,0,0,37,144,1,0,0,0,39,146,1,0,0,0,41,148,1,0,0,0,43,150,1,0,0,0,45,152,
1,0,0,0,47,158,1,0,0,0,49,162,1,0,0,0,51,166,1,0,0,0,53,170,1,0,0,0,55,173,
1,0,0,0,57,176,1,0,0,0,59,181,1,0,0,0,61,186,1,0,0,0,63,191,1,0,0,0,65,197,
1,0,0,0,67,202,1,0,0,0,69,208,1,0,0,0,71,214,1,0,0,0,73,218,1,0,0,0,75,222,
1,0,0,0,77,226,1,0,0,0,79,231,1,0,0,0,81,236,1,0,0,0,83,242,1,0,0,0,85,245,
1,0,0,0,87,250,1,0,0,0,89,261,1,0,0,0,91,282,1,0,0,0,93,293,1,0,0,0,95,300,
1,0,0,0,97,311,1,0,0,0,99,326,1,0,0,0,101,102,5,61,0,0,102,2,1,0,0,0,103,
104,5,124,0,0,104,105,5,124,0,0,105,4,1,0,0,0,106,107,5,38,0,0,107,108,5,
38,0,0,108,6,1,0,0,0,109,110,5,61,0,0,110,111,5,61,0,0,111,8,1,0,0,0,112,
113,5,33,0,0,113,114,5,61,0,0,114,10,1,0,0,0,115,116,5,62,0,0,116,12,1,0,
0,0,117,118,5,62,0,0,118,119,5,61,0,0,119,14,1,0,0,0,120,121,5,60,0,0,121,
16,1,0,0,0,122,123,5,60,0,0,123,124,5,61,0,0,124,18,1,0,0,0,125,126,5,43,
0,0,126,20,1,0,0,0,127,128,5,45,0,0,128,22,1,0,0,0,129,130,5,42,0,0,130,
24,1,0,0,0,131,132,5,47,0,0,132,26,1,0,0,0,133,134,5,42,0,0,134,135,5,42,
0,0,135,28,1,0,0,0,136,137,5,33,0,0,137,30,1,0,0,0,138,139,5,40,0,0,139,
32,1,0,0,0,140,141,5,41,0,0,141,34,1,0,0,0,142,143,5,44,0,0,143,36,1,0,0,
0,144,145,5,91,0,0,145,38,1,0,0,0,146,147,5,93,0,0,147,40,1,0,0,0,148,149,
5,123,0,0,149,42,1,0,0,0,150,151,5,125,0,0,151,44,1,0,0,0,152,153,5,99,0,
0,153,154,5,111,0,0,154,155,5,110,0,0,155,156,5,115,0,0,156,157,5,116,0,
0,157,46,1,0,0,0,158,159,5,118,0,0,159,160,5,97,0,0,160,161,5,114,0,0,161,
48,1,0,0,0,162,163,5,102,0,0,163,164,5,117,0,0,164,165,5,110,0,0,165,50,
1,0,0,0,166,167,5,108,0,0,167,168,5,101,0,0,168,169,5,116,0,0,169,52,1,0,
0,0,170,171,5,105,0,0,171,172,5,110,0,0,172,54,1,0,0,0,173,174,5,105,0,0,
174,175,5,102,0,0,175,56,1,0,0,0,176,177,5,116,0,0,177,178,5,104,0,0,178,
179,5,101,0,0,179,180,5,110,0,0,180,58,1,0,0,0,181,182,5,101,0,0,182,183,
5,108,0,0,183,184,5,115,0,0,184,185,5,101,0,0,185,60,1,0,0,0,186,187,5,116,
0,0,187,188,5,114,0,0,188,189,5,117,0,0,189,190,5,101,0,0,190,62,1,0,0,0,
191,192,5,102,0,0,192,193,5,97,0,0,193,194,5,108,0,0,194,195,5,115,0,0,195,
196,5,101,0,0,196,64,1,0,0,0,197,198,5,110,0,0,198,199,5,117,0,0,199,200,
5,108,0,0,200,201,5,108,0,0,201,66,1,0,0,0,202,203,5,112,0,0,203,204,5,114,
0,0,204,205,5,105,0,0,205,206,5,110,0,0,206,207,5,116,0,0,207,68,1,0,0,0,
208,209,5,105,0,0,209,210,5,110,0,0,210,211,5,112,0,0,211,212,5,117,0,0,
212,213,5,116,0,0,213,70,1,0,0,0,214,215,5,108,0,0,215,216,5,101,0,0,216,
217,5,110,0,0,217,72,1,0,0,0,218,219,5,105,0,0,219,220,5,110,0,0,220,221,
5,116,0,0,221,74,1,0,0,0,222,223,5,115,0,0,223,224,5,116,0,0,224,225,5,114,
0,0,225,76,1,0,0,0,226,227,5,98,0,0,227,228,5,111,0,0,228,229,5,111,0,0,
229,230,5,108,0,0,230,78,1,0,0,0,231,232,5,108,0,0,232,233,5,105,0,0,233,
234,5,115,0,0,234,235,5,116,0,0,235,80,1,0,0,0,236,237,5,61,0,0,237,238,
5,62,0,0,238,82,1,0,0,0,239,243,3,85,42,0,240,243,3,87,43,0,241,243,3,89,
44,0,242,239,1,0,0,0,242,240,1,0,0,0,242,241,1,0,0,0,243,84,1,0,0,0,244,
246,7,0,0,0,245,244,1,0,0,0,246,247,1,0,0,0,247,245,1,0,0,0,247,248,1,0,
0,0,248,86,1,0,0,0,249,251,7,0,0,0,250,249,1,0,0,0,251,252,1,0,0,0,252,250,
1,0,0,0,252,253,1,0,0,0,253,254,1,0,0,0,254,256,5,46,0,0,255,257,7,0,0,0,
256,255,1,0,0,0,257,258,1,0,0,0,258,256,1,0,0,0,258,259,1,0,0,0,259,88,1,
0,0,0,260,262,7,0,0,0,261,260,1,0,0,0,262,263,1,0,0,0,263,261,1,0,0,0,263,
264,1,0,0,0,264,271,1,0,0,0,265,267,5,46,0,0,266,268,7,0,0,0,267,266,1,0,
0,0,268,269,1,0,0,0,269,267,1,0,0,0,269,270,1,0,0,0,270,272,1,0,0,0,271,
265,1,0,0,0,271,272,1,0,0,0,272,273,1,0,0,0,273,275,7,1,0,0,274,276,7,2,
0,0,275,274,1,0,0,0,275,276,1,0,0,0,276,278,1,0,0,0,277,279,7,0,0,0,278,
277,1,0,0,0,279,280,1,0,0,0,280,278,1,0,0,0,280,281,1,0,0,0,281,90,1,0,0,
0,282,288,5,34,0,0,283,287,8,3,0,0,284,285,5,92,0,0,285,287,9,0,0,0,286,
283,1,0,0,0,286,284,1,0,0,0,287,290,1,0,0,0,288,286,1,0,0,0,288,289,1,0,
0,0,289,291,1,0,0,0,290,288,1,0,0,0,291,292,5,34,0,0,292,92,1,0,0,0,293,
297,7,4,0,0,294,296,7,5,0,0,295,294,1,0,0,0,296,299,1,0,0,0,297,295,1,0,
0,0,297,298,1,0,0,0,298,94,1,0,0,0,299,297,1,0,0,0,300,301,5,47,0,0,301,
302,5,47,0,0,302,306,1,0,0,0,303,305,8,6,0,0,304,303,1,0,0,0,305,308,1,0,
0,0,306,304,1,0,0,0,306,307,1,0,0,0,307,309,1,0,0,0,308,306,1,0,0,0,309,
310,6,47,0,0,310,96,1,0,0,0,311,312,5,47,0,0,312,313,5,42,0,0,313,317,1,
0,0,0,314,316,9,0,0,0,315,314,1,0,0,0,316,319,1,0,0,0,317,318,1,0,0,0,317,
315,1,0,0,0,318,320,1,0,0,0,319,317,1,0,0,0,320,321,5,42,0,0,321,322,5,47,
0,0,322,323,1,0,0,0,323,324,6,48,0,0,324,98,1,0,0,0,325,327,7,7,0,0,326,
325,1,0,0,0,327,328,1,0,0,0,328,326,1,0,0,0,328,329,1,0,0,0,329,330,1,0,
0,0,330,331,6,49,0,0,331,100,1,0,0,0,16,0,242,247,252,258,263,269,271,275,
280,286,288,297,306,317,328,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class biesCLexer extends antlr4.Lexer {

    static grammarFileName = "biesC.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'='", "'||'", "'&&'", "'=='", "'!='", "'>'", 
                         "'>='", "'<'", "'<='", "'+'", "'-'", "'*'", "'/'", 
                         "'**'", "'!'", "'('", "')'", "','", "'['", "']'", 
                         "'{'", "'}'", "'const'", "'var'", "'fun'", "'let'", 
                         "'in'", "'if'", "'then'", "'else'", "'true'", "'false'", 
                         "'null'", "'print'", "'input'", "'len'", "'int'", 
                         "'str'", "'bool'", "'list'", "'=>'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, "CONST", 
                          "VAR", "FUN", "LET", "IN", "IF", "THEN", "ELSE", 
                          "TRUE", "FALSE", "NULL", "PRINT", "INPUT", "LEN", 
                          "INT", "STR", "BOOL", "LIST", "ARROW", "NUMBER", 
                          "INTEGER", "FLOAT", "SCI", "STRING", "ID", "LC", 
                          "BC", "WS" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "T__20", "T__21", "CONST", "VAR", "FUN", 
                      "LET", "IN", "IF", "THEN", "ELSE", "TRUE", "FALSE", 
                      "NULL", "PRINT", "INPUT", "LEN", "INT", "STR", "BOOL", 
                      "LIST", "ARROW", "NUMBER", "INTEGER", "FLOAT", "SCI", 
                      "STRING", "ID", "LC", "BC", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

biesCLexer.EOF = antlr4.Token.EOF;
biesCLexer.T__0 = 1;
biesCLexer.T__1 = 2;
biesCLexer.T__2 = 3;
biesCLexer.T__3 = 4;
biesCLexer.T__4 = 5;
biesCLexer.T__5 = 6;
biesCLexer.T__6 = 7;
biesCLexer.T__7 = 8;
biesCLexer.T__8 = 9;
biesCLexer.T__9 = 10;
biesCLexer.T__10 = 11;
biesCLexer.T__11 = 12;
biesCLexer.T__12 = 13;
biesCLexer.T__13 = 14;
biesCLexer.T__14 = 15;
biesCLexer.T__15 = 16;
biesCLexer.T__16 = 17;
biesCLexer.T__17 = 18;
biesCLexer.T__18 = 19;
biesCLexer.T__19 = 20;
biesCLexer.T__20 = 21;
biesCLexer.T__21 = 22;
biesCLexer.CONST = 23;
biesCLexer.VAR = 24;
biesCLexer.FUN = 25;
biesCLexer.LET = 26;
biesCLexer.IN = 27;
biesCLexer.IF = 28;
biesCLexer.THEN = 29;
biesCLexer.ELSE = 30;
biesCLexer.TRUE = 31;
biesCLexer.FALSE = 32;
biesCLexer.NULL = 33;
biesCLexer.PRINT = 34;
biesCLexer.INPUT = 35;
biesCLexer.LEN = 36;
biesCLexer.INT = 37;
biesCLexer.STR = 38;
biesCLexer.BOOL = 39;
biesCLexer.LIST = 40;
biesCLexer.ARROW = 41;
biesCLexer.NUMBER = 42;
biesCLexer.INTEGER = 43;
biesCLexer.FLOAT = 44;
biesCLexer.SCI = 45;
biesCLexer.STRING = 46;
biesCLexer.ID = 47;
biesCLexer.LC = 48;
biesCLexer.BC = 49;
biesCLexer.WS = 50;



